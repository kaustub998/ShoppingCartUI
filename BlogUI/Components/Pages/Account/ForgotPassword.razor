@page "/Account/ForgotPassword"

@using EcorpUI.Models;
@using System.Text.Json;
@using System.Text;
@using Blazored.Toast.Services;
@using EcorpUI.Extensions;
@using Microsoft.JSInterop

@inject Microsoft.Extensions.Configuration.IConfiguration config
@inject NavigationManager NavigationManager
@inject IJSRuntime jsruntime

<style>
    .main-div {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh - 3.5rem;
    }

    .form-container {
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
    }

    .sign {
        margin-bottom: 20px;
        font-size: 24px;
        font-weight: bold;
        text-align: center;
    }

    .form1 {
        margin-top: 20px;
    }

    .form-group-login {
        margin-bottom: 20px;
    }

    .input-field-login {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    .submitBtn {
        width: 200px;
        padding: 10px;
        background-color: #007bff;
        color: #fff;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
    }

    .submitBtn:hover {
        background-color: #0056b3;
    }

    .fade-text {
        font-size: 14px;
        color: #777;
        margin-top: 10px;
    }

    .fade-text a {
        color: #007bff;
        text-decoration: none;
    }

    .fade-text a:hover {
        text-decoration: underline;
    }
</style>


<div>
    <EditForm Model="@forgotPassword" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <div class="main-div">
            <div class="form-container">
                <p class="sign" align="center">Reset Password</p>
                <div class="form1">
                    <div class="form-group-login">
                        <input id="email" class="form-control input-field-login" type="text" align="center" placeholder="Enter your email" @bind-value="forgotPassword.Email" />
                        <ValidationMessage For="() => forgotPassword.Email"></ValidationMessage>
                    </div>
                    <div class="d-flex justify-content-center">
                        <RadzenButton ButtonType="Radzen.ButtonType.Submit" class="submitBtn">Request Reset Link</RadzenButton>
                    </div>
                    <div class="d-flex justify-content-center">
                        <p class="fade-text" align="center"><NavLink href="/login">Back To Login</NavLink></p>
                    </div>
                    <p class="fade-text" align="center">The verification email will be sent to your mailbox. Please check it.</p>
                </div>
            </div>

        </div>

    </EditForm>

</div>

@code {
    private ForgotPasswordModel forgotPassword = new ForgotPasswordModel();

    private async Task HandleValidSubmit()
    {
        HttpClient httpClient = new HttpClient();

        var requestUrl = config["APIBaseUrl"] + "account/forgotpassword";

        using StringContent jsonContent = new(
            JsonSerializer.Serialize(new
            {
                email = forgotPassword.Email,
                resetToken = ""
            }),
            Encoding.UTF8,
            "application/json");

        HttpResponseMessage response = await httpClient.PostAsync(requestUrl, jsonContent);

        httpClient.Dispose();
        using var responseStream = await response.Content.ReadAsStreamAsync();
        if (responseStream.Length > 0)
        {
            ResponseModel responseModel = await JsonSerializer.DeserializeAsync<ResponseModel>(responseStream);
            if (responseModel.isSuccess.HasValue && responseModel.isSuccess.Value)
            {
                jsruntime.ToastrSuccess(responseModel.message);
                NavigateToLoginPage();
            }
            else
            {
                jsruntime.ToastrError(responseModel.message);
            }
        }
        else
        {
            jsruntime.ToastrError("Something went wrong !!!");
        }
    }

    private void NavigateToLoginPage()
    {
        NavigationManager.NavigateTo("/account/login");
    }
}
